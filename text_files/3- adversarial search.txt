Adversarial Search Dr. Emad Natsheh Space of Search Strategies Adversarial Search Types of Games • Many different kinds of games • Axes • Deterministic or stochastic ? • One two or more player ? • Zero sum ? • Perfect information ( you can see the state ) Deterministic and Perfect Information Games • Perfect Information Games • States • Actions • Successor function • Terminal test • Deterministic • Non-Deterministic : You can look at Expectimax search , and Markov Decision Processes Zero Sum Games Deterministic Single-Player Deterministic Two-Player Game Theory ( Strategy ) Mini-Max Algorithm Game Tree Mini-Max Algorithm • Deterministic , zero-sum , perfect information , two player • Tic-Tac-Toe , chess • One player maximizes result • The other minimizes result How Mini-Max work ? Example Evaluation Function Depth Matters ▪ Evaluation functions are always imperfect ▪ The deeper in the tree the evaluation function is buried , the less the quality of the evaluation function matters Evaluation Function ( Tic-Tac-Toe ) Mini-Max Pseudocode Example Example 2 Example 2 Game NIM Game NIM Mini-Max Analysis • Time Complexity • Space Complexity Mini-Max Analysis • Can we do betters ? How ? Alpha-Beta Pruning Alpha-Beta Pruning Alpha-Beta Pruning Pseudocode α=-inf Β=+inf V= α= Β= V= α= Β= V= α= Β= V= α= Β= V= α= Β= V= α= Β= V= α= Β= V= α= Β= V= Alpha-Beta Analysis Multi-Agent Utilities Multi-Agent Utilities • What if the game has multiple player ? • Generalization of minimax : • Evaluation function given by vector • All players are Max MINIMAXWITHOUT abababab-PRUNINGMiniMax & Constraint Processing : MiniMaxAlgorithm MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin3 MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin31 MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin312472030231 MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin3124720302313 MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin31247203023132 MiniMaxwithout ab-pruningMaxMin435214235473214053027453136MaxMin312472030231327033 MiniMaxwithout ab-pruningMaxMin02435214235473214053027453136MaxMin312472030231327033 MiniMaxwithout ab-pruningMaxMin022435214235473214053027453136MaxMin312472030231327033 MINIMAXWITH abababab-PRUNINGMiniMax & Constraint Processing : MiniMaxAlgorithm MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin MiniMaxwith ab-pruningMaxMin•aaaa-nodes : TemporaryvaluesatMIN-nodes435214235473214053027453136MaxMin≤4 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin≤4 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin≤3 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin≤3 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin=3 MiniMaxwith ab-pruningMaxMin•bbbb-nodes : TemporaryvaluesatMAX-nodes435214235473214053027453136MaxMin=3≥3 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin=3≥3 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin=3≥3≤2 MiniMaxwith ab-pruningMaxMin•Prune : Parentbbbb-node≥Childaaaa-node435214235473214053027453136MaxMin=3≥3≤2 MiniMaxwith ab-pruningMaxMin435214235473214053027453136MaxMin=3=3=2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2≤4 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2≤4 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2≤2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2≤2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2=2 MiniMaxwith ab-pruningMaxMin≤3435214235473214053027453136MaxMin=3=3=2=2=2 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2≤5 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2≤5 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2=4 MiniMaxwith ab-pruningMaxMin≤2435214235473214053027453136MaxMin=3=3=2=2=2=4≥4 MiniMaxwith ab-pruningMaxMin≤2•Prune : Parentaaaa-node≤Childbbbb-node435214235473214053027453136MaxMin=3=3=2=2=2=4≥4 MiniMaxwith ab-pruningMaxMin=2435214235473214053027453136MaxMin=3=3=2=2=2=4=4 MiniMaxwith ab-pruningMaxMin=2≥2435214235473214053027453136MaxMin=3=3=2=2=2=4=4 MiniMaxwith ab-pruningMaxMin=2≥2435214235473214053027453136MaxMin=3=3=2=2=2=4=4 MiniMaxwith ab-pruningMaxMin=2≥2435214235473214053027453136MaxMin=3=3=2=2=2=4=4≤1 MiniMaxwith ab-pruningMaxMin=2≥2• “ Deep ” cut-off : Ancestorbbbb-node≥aaaa-node435214235473214053027453136MaxMin=3=3=2=2=2=4=4≤1 MiniMaxwith ab-pruningMaxMin=2≥2435214235473214053027453136MaxMin=3=3=2=2=2=4=4=1=1 MiniMaxwith ab-pruningMaxMin=2≥2≤1435214235473214053027453136MaxMin=3=3=2=2=2=4=4=1=1 MiniMaxwith ab-pruningMaxMin=2≥2≤1•Prune : Parentbbbb-node≥Childaaaa-node435214235473214053027453136MaxMin=3=3=2=2=2=4=4=1=1 MiniMaxwith ab-pruningMaxMin=2=2=1•17staticevaluationssaved435214235473214053027453136MaxMin=3=3=2=2=2=4=4=1=1 PROBLEM 2MiniMax & Constraint Processing : MiniMaxAlgorithm Problem 2•Canthenodesbeorderedinsuchawaythatab-pruningcancutoffmorebranches ? Max435214235473214053027453136MinMaxMin OPTIMIZING abababab-PRUNINGMiniMax & Constraint Processing : MiniMaxAlgorithm Optimizing ab-Pruning•Bestcase : Eachlayerbestnodeleft-to-rightMaxMin022435214235473214053027453136MaxMin312472030231327033 Optimizing ab-Pruning•Bestcase : Eachlayerbestnodeleft-to-rightMaxMin435214235473214053027453136MaxMin312472030231327033 Optimizing ab-Pruning•Bestcase : Eachlayerbestnodeleft-to-rightMaxMin435214235473214053027453136MaxMin312472030231 Optimizing ab-Pruning•Bestcase : Eachlayerbestnodeleft-to-rightMaxMin345122344572301435024713536MaxMin MINIMAXWITH abababab-PRUNINGMiniMax & Constraint Processing : MiniMaxAlgorithm Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin≤2 Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin≤2 Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin≤2 Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin=2 Minimaxwith ab-PruningMaxMin345122344572301435024713536MaxMin=2=2 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2≤3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2≤3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2≤3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3≥3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3≥3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3=7 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3=7≥7 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3=7≥7 Minimaxwith ab-PruningMaxMin≤2345122344572301435024713536MaxMin=2=2=3=3=7=7 Minimaxwith ab-PruningMaxMin=2345122344572301435024713536MaxMin=2=2=3=3=7=7 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7≤0 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7≤0 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7=0 Minimaxwith ab-PruningMaxMin=2≥2345122344572301435024713536MaxMin=2=2=3=3=7=7=0=0 Minimaxwith ab-PruningMaxMin=2≥2≤0345122344572301435024713536MaxMin=2=2=3=3=7=7=0=0 Minimaxwith ab-PruningMaxMin=2≥2≤0345122344572301435024713536MaxMin=2=2=3=3=7=7=0=0 Minimaxwith ab-PruningMaxMin=2≥2=0•19staticevaluationssaved345122344572301435024713536MaxMin=2=2=3=3=7=7=0=0 Exercises : Artificial IntelligenceMiniMax & Constraint Processing : MiniMaxAlgorithm for 3 Players PROBLEMMiniMax & Constraint Processing : MiniMaxAlgorithm for 3 Players Problem•ComeupwithaMiniMaxalgorithmfor3playersandapplyonthefigurebelow .. . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 5. . .. . .. . .. . .. . .. . . MINIMAXFOR 3 PLAYERSMiniMax & Constraint Processing : MiniMaxAlgorithm MiniMaxFor 3 Players•AllplayersareMax•Evaluationfunctiongivenbyvector . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 5. . .. . .. . .. . .. . .. . . MiniMaxFor 3 Players•Eachlayerassignedto1player•Turn : every3layers . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 5. . .. . .. . .. . .. . .. . .Player 3Player 2Player 1 MiniMaxFor 3 Players•Maxthirdplayer : thirdpositionofvector . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 5. . .. . .. . .. . .. . .. . .Player 3 MiniMaxFor 3 Players•MaxThirdPlayer ( [ 1,2,3 ] , [ 4,2,1 ] ) = [ 1,2,3 ] •MaxThirdPlayer ( [ 6,1,2 ] , [ 7,4 , -1 ] ) = [ 6,1,2 ] •MaxThirdPlayer ( [ 5 , -1 , -1 ] , [ -1,5,2 ] ) = [ -1,5,2 ] •MaxThirdPlayer ( [ 7,7 , -1 ] , [ 5,4,5 ] ) = [ 5,4,5 ] . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 2 36 1 2. . .. . .-1 5 25 4 5Player 3 MiniMaxFor 3 Players•Secondplayer ’ smove . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 2 36 1 2. . .. . .-1 5 25 4 5Player 3Player 2 MiniMaxFor 3 Players•Maxsecondplayer : secondpositionofvector . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 236 12. . .. . .-1 525 45Player 3Player 2 MiniMaxFor 3 Players•MaxSecondPlayer ( [ 1,2,3 ] , [ 6,1,2 ] ) = [ 1,2,3 ] •MaxSecondPlayer ( [ -1,5,2 ] , [ 5,4,5 ] ) = [ -1,5,2 ] . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 236 121 2 3-1 5 2-1 525 45Player 3Player 2 MiniMaxFor 3 Players•Firstplayer ’ smove . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 2 36 1 21 2 3-1 5 2-1 5 25 4 5Player 3Player 2Player 1 MiniMaxFor 3 Players•Maxfirstplayer : firstpositionofvector . . .1 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 2 36 1 212 3-15 2-1 5 25 4 5Player 3Player 2Player 1 MiniMaxFor 3 Players•MaxFirstPlayer ( [ 1,2,3 ] , [ -1,5,4 ] ) = [ 1,2,3 ] 1 2 31 2 34 2 16 1 27 4 -15 -1 -1-1 5 27 7 -15 4 51 2 36 1 212 3-15 2-1 5 25 4 5Player 3Player 2Player 1